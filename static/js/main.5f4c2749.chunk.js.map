{"version":3,"sources":["api/api.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["imagesFromApi","Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","translate","setTranslate","hiddenImages","length","className","style","width","map","image","index","transform","transition","src","alt","type","onClick","prevTranslate","Math","min","max","App","setStep","setFrameSize","setItemWidth","animation","setAnimation","isInfinite","setIstInfinite","method","htmlFor","value","id","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f4c2749.chunk.js","sourcesContent":["export const imagesFromApi = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [translate, setTranslate] = useState(0);\n  const hiddenImages = (images.length - frameSize) * itemWidth;\n\n  const onClickNext = () => {\n    setTranslate(Math.max(translate - itemWidth * step, -hiddenImages));\n\n    if (translate === -hiddenImages && infinite) {\n      setTranslate(0);\n    }\n  };\n\n  const onClickPrev = () => {\n    setTranslate((prevTranslate) => (\n      Math.min(prevTranslate + itemWidth * step, 0)));\n\n    if (translate === 0 && infinite) {\n      setTranslate(-hiddenImages);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div style={{ width: frameSize * itemWidth }}>\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(${translate}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img src={image} alt={`${index}`} style={{ width: itemWidth }} />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button type=\"button\" onClick={onClickPrev}>Prev</button>\n        <button type=\"button\" onClick={onClickNext}>Next</button>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable import/no-named-as-default */\nimport { useState } from 'react';\nimport { imagesFromApi } from './api/api';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const App = () => {\n  const [images] = useState(imagesFromApi);\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animation, setAnimation] = useState(1000);\n  const [isInfinite, setIstInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Carousel with ${images.length} images`}</h1>\n\n      <form method=\"get\" className=\"App__form\">\n        <label htmlFor=\"step\" className=\"App__item\">\n          Step:\n          <input\n            type=\"number\"\n            min={1}\n            max={10}\n            value={step}\n            id=\"step\"\n            className=\"form__item\"\n            onChange={(event) => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"frameSize\" className=\"App__item\">\n          Frame size:\n          <input\n            type=\"number\"\n            min={1}\n            max={10}\n            id=\"frameSize\"\n            className=\"form__item\"\n            value={frameSize}\n            onChange={(event) => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"itemWidth\" className=\"App__item\">\n          Item with:\n          <input\n            type=\"number\"\n            min={50}\n            max={300}\n            id=\"itemWidth\"\n            className=\"form__item\"\n            value={itemWidth}\n            onChange={(event) => setItemWidth(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\" className=\"App__item\">\n          Animation duration:\n          <input\n            type=\"number\"\n            min={100}\n            max={4000}\n            step={100}\n            id=\"animationDuration\"\n            className=\"form__item\"\n            value={animation}\n            onChange={(event) => setAnimation(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\" className=\"App__item\">\n          Infinite:\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            checked={isInfinite}\n            onChange={(event) => setIstInfinite(event.target.checked)}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animation}\n        infinite={isInfinite}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}